; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    ; {py27,py33,py34,py35,pypy},
    {py27,py35},
    report,
    ; docs

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    {py27,docs,spell}: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    {extension-coveralls,coveralls,codecov}: python3.5
    {bootstrap,clean,check,report}: python
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PYTHONHASHSEED=123
passenv =
    *
usedevelop = false
deps =
    -r{toxinidir}/requirements/test.txt
    nose
    coverage
commands =
    # NOTE: There is a known bug that affects the combination of {py34+}+nose+coverage+doctest. For more info,
    # see: [nose bug #921](https://github.com/nose-devs/nose/issues/921)
    # In fact, even without coverage, the combination of {py34+}+nose+doctest still hangs (with maxed CPU usage!).
    # Therefore, we don't/can't currently run the doctests in py34+ testenvs.
    py{27,33,py}: {posargs:nosetests --with-coverage --cover-package=clifunzone --with-doctest tests src}
    py{34,35}: {posargs:nosetests --with-coverage --cover-package=clifunzone tests}
    ; py{34,35}: {posargs:nosetests --with-doctest src}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coverage combine
    coverage report
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage combine
    coverage report
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage


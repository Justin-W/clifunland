; a generative tox configuration, see: https://testrun.org/tox/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    ; {py27,py33,py34,py35,pypy},
    {py27,py35},
    report,
    ; docs

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    {py27,docs,spell}: {env:TOXPYTHON:python2.7}
    py33: {env:TOXPYTHON:python3.3}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    {coveralls,codecov}: python3.5
    {bootstrap,clean,check,report,fixisort}: python
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    # NOTE: we use a hardcoded hashseed to ensure predictable test execution (e.g. for 'repr({...})', etc.)
    PYTHONHASHSEED=123
passenv =
    *
usedevelop = false
deps =
    -r{toxinidir}/requirements/test.txt
    # Note: the following were moved to {toxinidir}/requirements/test.txt. Commented to prevent duplicate req error.
    ; pytest
    ; pytest-travis-fold
    ; pytest-cov
commands =
    # NOTE: Many of the doctests currently fail under py3. Apparently due to relative imports of modules.
    # For more info,
    # see: [py3 relative import options](http://stackoverflow.com/questions/16981921/relative-imports-in-python-3)
    # For now (as a workaround), we simply make doctest execution a py27-only operation.
    ; py{27}: {posargs:py.test --doctest-modules --cov=clifunzone --cov-report=term-missing -vv src}
    py{27}: {posargs:py.test --doctest-modules --cov=clifunzone --cov-report=term-missing src}
    # see: [pytest with doctest](https://pytest.org/latest/doctest.html)
    {posargs:py.test --cov=clifunzone --cov-report=term-missing -vv tests}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    ;isort --verbose --check-only --diff --recursive src tests setup.py
    isort --check-only --recursive src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coverage combine
    coverage report
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage combine
    coverage report
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:fixisort]
deps = isort
skip_install = true
skipsdist = true
;usedevelop = true
commands =
    # see: [isort](https://pypi.python.org/pypi/isort)
    ; isort --atomic --recursive src tests setup.py
    isort --verbose --recursive src tests setup.py
